/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-12-27 07:29:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class conatct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <section class=\"contact\">\r\n");
      out.write("        <h2>Contect Me!</h2>\r\n");
      out.write("        <form action=\"#\">\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <div class=\"input-field field\">\r\n");
      out.write("                    <input type=\"text\" placeholder=\"Full Name\" id=\"name\" class=\"item\" autocomplete=\"off\">\r\n");
      out.write("                    <div class=\"error-txt\">Full Name can't be blank</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"input-field field\">\r\n");
      out.write("                    <input type=\"email\" placeholder=\"Email\" id=\"email\" class=\"item\" autocomplete=\"off\">\r\n");
      out.write("                    <div class=\"error-txt\">Email can't be blank</div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"input-box\">\r\n");
      out.write("                <div class=\"input-field field\">\r\n");
      out.write("                    <input type=\"text\" placeholder=\"Phone Number\" id=\"phone\" class=\"item\" autocomplete=\"off\">\r\n");
      out.write("                    <div class=\"error-txt\">phone number can't be blank</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"input-field field\">\r\n");
      out.write("                    <input type=\"text\" placeholder=\"subject\" id=\"subject\" class=\"item\" autocomplete=\"off\">\r\n");
      out.write("                    <div class=\"error-txt\">subject can't be blank</div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"textarea-field field\">\r\n");
      out.write("                <textarea name=\"\" id=\"message\" cols=\"10\" rows=\"3\" placeholder=\"Your Massage\" class=\"item\"\r\n");
      out.write("                    aria-autocomplete=\"off\"></textarea>\r\n");
      out.write("                <div class=\"error-txt\">message can't be blank</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <button type=\"submit\">Send Message</button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("    </section>\r\n");
      out.write("    <script src=\"https://smtpjs.com/v3/smtp.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap');\r\n");
      out.write("\r\n");
      out.write("*{\r\n");
      out.write("    font-family: 'Poppins', sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    block-size: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("    background: #1f242d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contact h2{\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    color: #ededed;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".contact form{\r\n");
      out.write("    width: 600px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form .input-box{\r\n");
      out.write("    display:inline;\r\n");
      out.write("    gap: 100px;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input-box.input-field {\r\n");
      out.write("    width: 48.5%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field .item{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 18px;\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 2px solid #0ef;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: #ededed;\r\n");
      out.write("    margin: 12px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field.error .item{\r\n");
      out.write("    border-color: #D93025;\r\n");
      out.write("}\r\n");
      out.write(".field .item::placeholder{\r\n");
      out.write("    color: rgba(255, 255, 255, .3);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field  .error-txt{\r\n");
      out.write("    font-size: 14.5px;\r\n");
      out.write("    color:#D93025;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    margin: -5px 0 10px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("form .textarea-field .item{\r\n");
      out.write("    resize: none;\r\n");
      out.write("}\r\n");
      out.write(".field.error .error-txt{\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("form .textarea-field .error-txt{\r\n");
      out.write("    margin-top: -10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form button{\r\n");
      out.write("    padding: 12px 32px;\r\n");
      out.write("    background: #0ef;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    box-shadow: 0 0  10px  #0ef;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    letter-spacing: 1px;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("form button:hover\r\n");
      out.write("{\r\n");
      out.write("    box-shadow: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@600&display=swap');\r\n");
      out.write("\r\n");
      out.write("*{\r\n");
      out.write("    font-family: 'Poppins', sans-serif;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    block-size: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    min-height: 100vh;\r\n");
      out.write("    background: #1f242d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".contact h2{\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    color: #ededed;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 10px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".contact form{\r\n");
      out.write("    width: 600px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form .input-box{\r\n");
      out.write("    display:inline;\r\n");
      out.write("    gap: 100px;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input-box.input-field {\r\n");
      out.write("    width: 48.5%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field .item{\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 18px;\r\n");
      out.write("    background: transparent;\r\n");
      out.write("    border: 2px solid #0ef;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: #ededed;\r\n");
      out.write("    margin: 12px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field.error .item{\r\n");
      out.write("    border-color: #D93025;\r\n");
      out.write("}\r\n");
      out.write(".field .item::placeholder{\r\n");
      out.write("    color: rgba(255, 255, 255, .3);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".field  .error-txt{\r\n");
      out.write("    font-size: 14.5px;\r\n");
      out.write("    color:#D93025;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    margin: -5px 0 10px;\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("form .textarea-field .item{\r\n");
      out.write("    resize: none;\r\n");
      out.write("}\r\n");
      out.write(".field.error .error-txt{\r\n");
      out.write("    display: block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("form .textarea-field .error-txt{\r\n");
      out.write("    margin-top: -10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form button{\r\n");
      out.write("    padding: 12px 32px;\r\n");
      out.write("    background: #0ef;\r\n");
      out.write("    border: none;\r\n");
      out.write("    outline: none;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    box-shadow: 0 0  10px  #0ef;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    letter-spacing: 1px;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    margin-top: 20px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("form button:hover\r\n");
      out.write("{\r\n");
      out.write("    box-shadow: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("const form = document.querySelector(\"form\");\r\n");
      out.write("const fullName = document.getElementById(\"name\");\r\n");
      out.write("const email = document.getElementById(\"email\");\r\n");
      out.write("const phone = document.getElementById(\"phone\");\r\n");
      out.write("const subject = document.getElementById(\"subject\");\r\n");
      out.write("const message = document.getElementById(\"message\");\r\n");
      out.write("\r\n");
      out.write("function sendEmail() {\r\n");
      out.write("	 const bodyMessage = `<b>Full Name:</b> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fullName.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("         <b>Email:</b> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${email.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("         <b>Phone Number:</b> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${phone.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("         <b>Subject:</b> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${subject.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("<br>\r\n");
      out.write("         <b>Message:</b> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message.value}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("         \r\n");
      out.write("         Email.send({\r\n");
      out.write("        SecureToken :\"60b13f01-c6e6-4f44-b1c9-5ac5785ad7b0\",\r\n");
      out.write("        To: 'elanpraveen0404@gmail.com',\r\n");
      out.write("        From: \"elanpraveen0404@gmail.com\",\r\n");
      out.write("        Subject: subject.value,\r\n");
      out.write("        Body: bodyMessage,\r\n");
      out.write("        ContentType: \"text/html; charset=utf-8\" // Add this line to specify HTML content\r\n");
      out.write("\r\n");
      out.write("    }).then(\r\n");
      out.write("        (message) => {\r\n");
      out.write("            if (message === \"OK\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: \"Success!\",\r\n");
      out.write("                    text: \"Message Sent Successfully!\",\r\n");
      out.write("                    icon: \"success\"\r\n");
      out.write("                });\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    );\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function checkInputs() {\r\n");
      out.write("    const items = document.querySelectorAll(\".item\");\r\n");
      out.write("    let isValid = true;\r\n");
      out.write("\r\n");
      out.write("    for (const item of items) {\r\n");
      out.write("        if (item.value === \"\") {\r\n");
      out.write("            item.classList.add(\"error\");\r\n");
      out.write("            item.parentElement.classList.add(\"error\");\r\n");
      out.write("            isValid = false;\r\n");
      out.write("        } else {\r\n");
      out.write("            item.classList.remove(\"error\");\r\n");
      out.write("            item.parentElement.classList.remove(\"error\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    return isValid;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form.addEventListener(\"submit\", (e) => {\r\n");
      out.write("    e.preventDefault();\r\n");
      out.write("\r\n");
      out.write("    if (checkInputs() && !fullName.classList.contains(\"error\") && !email.classList.contains(\"error\") && !phone.classList.contains(\"error\") && !subject.classList.contains(\"error\") && !message.classList.contains(\"error\")) {\r\n");
      out.write("        sendEmail();\r\n");
      out.write("\r\n");
      out.write("        form.reset();\r\n");
      out.write("        return false;\r\n");
      out.write("    \r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
